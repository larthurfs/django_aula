"""
Django settings for teoricodjango project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', defaut=False, cast=bool)

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #apps Instaladas
    'apps.core.apps.CoreConfig',
    'apps.minha_app.apps.MinhaAppConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'teoricodjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'teoricodjango.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATIC_URL = 'apps/core/static/' #Essa configuração define o URL base para os arquivos estáticos. O valor 'apps/core/static/' indica que os arquivos estáticos serão acessíveis através de URLs que começam com esse prefixo. Por exemplo, se o domínio do seu site for neurondat.com, o URL completo para um arquivo estático chamado style.css seria encontrado pela rota neurondat.com/apps/core/static/style.css.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') #Essa configuração especifica o diretório onde os arquivos estáticos serão coletados durante o processo de implantação do projeto. O valor 'staticfiles' representa o nome do diretório onde os arquivos estáticos coletados serão armazenados. O os.path.join(BASE_DIR, 'staticfiles') é usado para criar o caminho absoluto para esse diretório, combinando o diretório raiz do projeto (BASE_DIR) com o nome do diretório dos arquivos estáticos. Vamos falar melhor desse tema na implantação desse projeto
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'apps/core/static/')] #Essa configuração define uma lista de diretórios adicionais onde o Django deve procurar por arquivos estáticos. No exemplo fornecido, o diretório 'apps/core/static/' é adicionado à lista. Isso significa que além dos arquivos estáticos coletados no diretório definido em STATIC_ROOT, o Django também procurará arquivos estáticos nesse diretório específico. Essa configuração é útil quando você possui arquivos estáticos em diferentes diretórios dentro do seu projeto.



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
